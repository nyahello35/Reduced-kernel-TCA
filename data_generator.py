import numpy as np
# This module is used to generate the 3-dimensional datasets under the scenario of covariate shift. Data points belonging to different class in each dataset are generated by a multivariate normal distribution.
# ||Parameter description||

# source_pos_mean: The mean of the multivariate normal distribution which is used to generate the data belonging to positive class in source dataset.

# var: The common variance of all the multivariate normal distributions.

# class_shift: The distance of the means between the data belonging to positive and negative class in each dataset.

# translation: The distance of the means between the data belonging to source and target datasets.

# angle: The rotation angle of the means between the data belonging to source and target datasets along the z-axis.

# nsp, nsn, ntp, ntn: The number of data belonging to positive and negative class in source and target datasets.
def data_generator(source_pos_mean, var, class_shift, translation, angle, nsp, nsn, ntp, ntn):
    source_neg_mean = source_pos_mean + class_shift
    Xsp = np.random.multivariate_normal(source_pos_mean, var, nsp)
    Xsn = np.random.multivariate_normal(source_neg_mean, var, nsn)
    rotation_matrix = np.array(([np.cos(angle),-np.sin(angle),0],[np.sin(angle),-np.cos(angle),0],[0,0,1]))
    target_pos_mean = source_pos_mean@rotation_matrix + translation
    target_neg_mean = source_neg_mean@rotation_matrix + translation
    Xtp = np.random.multivariate_normal(target_pos_mean, var, ntp)
    Xtn = np.random.multivariate_normal(target_neg_mean, var, ntn)
    return Xsp, Xsn, Xtp, Xtn